name: Deploy Blog

on: [ push ] # 当有新push时运行

env:
  TZ: Asia/Shanghai

jobs:
  build: # 一项叫做build的任务
    environment: github-pages

    runs-on: ubuntu-latest # 在最新版的Ubuntu系统下运行

    steps:
#      - run: |
#          git config --global http.sslVerify "false"
#          git config --global https.sslVerify "false"
#          git config --global --add http.proxy http://192.168.65.4:10809
#          git config --global --add https.proxy http://192.168.65.4:10809

#      - run: |
#          sudo apt update && sudo apt install net-tools
#          ifconfig

      - name: Checkout # 将仓库内master分支的内容下载到工作目录
        uses: actions/checkout@v2 # 脚本来自 https://github.com/actions/checkout
        with:
          ref: source
          submodules: recursive

      - name: Setup node
        # 配置Node环境
        uses: actions/setup-node@v1 # 配置脚本来自 https://github.com/actions/setup-node
        with:
          node-version: "14.x"

#      - name: Cache node modules
#        # 設置包緩存目錄，避免每次下載
#        uses: actions/cache@v1
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install hexo dependencies
        # 下載 hexo-cli 腳手架及相關安裝包
        run: |
          npm install hexo-cli gulp -g
          npm install
          npm install hexo@5.4.0

      - name: Generate files
        # 編譯 markdown 文件
        run: node ./build.js all
#          hexo clean --debug
#          hexo generate --debug

      #      - name: Execute gulp task
      #        run: gulp

      - name: Deploy hexo blog
        env:
          # Github 倉庫
          GITHUB_REPO: github.com/SuCicada/sucicada.github.io
          # Coding 倉庫
          # CODING_REPO: e.coding.net/SuCicada/blog/hexo.git
          # Gitee 倉庫
          # GITEE_REPO: gitee.com/SuCicada/sucicada.git
        # 將編譯後的博客文件推送到指定倉庫
        run: |
          cd ./public && git init && git add .
          git config user.name "SuCicada"
          git config user.email "pengyifu@gmail.com"
          git add .
          git commit -m "GitHub Actions Auto Builder at $(date +'%Y-%m-%d %H:%M:%S')"
          # "https://SuCicada:${{ secrets.GITEE_ACCESS_TOKEN }}@${{ env.GITEE_REPO }}"
          # "https://${{ secrets.CODING_ACCESS_TOKEN_USERNAME }}:${{ secrets.CODING_ACCESS_TOKEN }}@${{ env.CODING_REPO }}"
          repos=(
            "https://oauth2:${{ secrets.GITHUB_TOKEN }}@${{ env.GITHUB_REPO }}"
          )
          for repo in ${repos[@]};do
            echo start push $repo
            git push --force --quiet $repo master:master
            echo success push $repo
          done

      #          git remote add origin "https://SuCicada:cf7bdfe1674796ad4c738e10bb567dc4@gitee.com/SuCicada/sucicada.git"
      #          git push -u origin master -f
      #      - name: Sync to Gitee
      #        uses: wearerequired/git-mirror-action@master
      #        env:
      #          # 注意在 Settings->Secrets 配置 GITEE_RSA_PRIVATE_KEY
      #          SSH_PRIVATE_KEY: ${{ secrets.GIT_RSA_PRIVATE_KEY }}
      #        with:
      #          # 注意替换为你的 GitHub 源仓库地址
      #          source-repo: git@github.com:SuCicada/sucicada.github.io.git
      #          # 注意替换为你的 Gitee 目标仓库地址
      #          destination-repo: git@gitee.com:SuCicada/sucicada.git

      # - name: Build Gitee Pages
      #   uses: yanglbme/gitee-pages-action@main
      #   with:
      #     # 注意替换为你的 Gitee 用户名
      #     gitee-username: SuCicada
      #     # 注意在 Settings->Secrets 配置 GITEE_PASSWORD
      #     gitee-password: ${{ secrets.GITEE_PASSWORD }}
      #     # 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错
      #     gitee-repo: SuCicada/sucicada
      #     # 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）
      #     branch: master

      - name: send telegram message on success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: |
            *[Build SUCCESS]* ${{ github.repository }}

            Commit message: ${{ github.event.commits[0].message }}

            [See Changes](https://github.com/${{ github.repository }}/commit/${{github.sha}})

      - name: send telegram message on failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: |
            *[Build FAILURE]* ${{ github.repository }}

            [See Error Log](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
